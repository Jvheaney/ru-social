spring.main.banner-mode=off
logging.file=/logs/rumine_backend.log
server.use-forward-headers=true
server.address=127.0.0.1
server.port=
server.ssl.key-alias=
server.ssl.key-password=
server.ssl.key-store=
server.ssl.key-store-provider=
server.ssl.key-store-type=
server.ssl.key-store-password=

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://{url}:{port}/{db}
spring.datasource.username=r
spring.datasource.password=
spring.datasource.hikari.maximumPoolSize=25
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB

spring.data.neo4j.uri=bolt://{url}:{port}
spring.data.neo4j.username=
spring.data.neo4j.password=

app.firebase-configuration-file=
app.notifications.defaults=

imageSaveLocation=img_uploads/
imageMagickToolPath=/usr/local/Cellar/imagemagick/:/usr/local/Cellar/imagemagick/7.0.10-19/:/usr/local/Cellar/imagemagick/7.0.10-19/bin/:/usr/local/bin/

spring.kafka.producer.bootstrap-servers={url}:{port}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

spring.kafka.consumer.bootstrap-servers={url}:{port}
spring.kafka.consumer.group-id=notification_workers
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
